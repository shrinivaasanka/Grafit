[('ConstantInputWarning', <class 'scipy.stats._warnings_errors.ConstantInputWarning'>), ('Covariance', <class 'scipy.stats._covariance.Covariance'>), ('DegenerateDataWarning', <class 'scipy.stats._warnings_errors.DegenerateDataWarning'>), ('FitError', <class 'scipy.stats._warnings_errors.FitError'>), ('NearConstantInputWarning', <class 'scipy.stats._warnings_errors.NearConstantInputWarning'>), ('__all__', ['ConstantInputWarning', 'Covariance', 'DegenerateDataWarning', 'FitError', 'NearConstantInputWarning', 'alexandergovern', 'alpha', 'anderson', 'anderson_ksamp', 'anglit', 'ansari', 'arcsine', 'argus', 'barnard_exact', 'bartlett', 'bayes_mvs', 'bernoulli', 'beta', 'betabinom', 'betaprime', 'biasedurn', 'binned_statistic', 'binned_statistic_2d', 'binned_statistic_dd', 'binom', 'binom_test', 'binomtest', 'boltzmann', 'bootstrap', 'boschloo_exact', 'boxcox', 'boxcox_llf', 'boxcox_normmax', 'boxcox_normplot', 'bradford', 'brunnermunzel', 'burr', 'burr12', 'cauchy', 'chi', 'chi2', 'chi2_contingency', 'chisquare', 'circmean', 'circstd', 'circvar', 'combine_pvalues', 'contingency', 'cosine', 'cramervonmises', 'cramervonmises_2samp', 'crystalball', 'cumfreq', 'describe', 'dgamma', 'differential_entropy', 'directional_stats', 'dirichlet', 'distributions', 'dlaplace', 'dweibull', 'energy_distance', 'entropy', 'epps_singleton_2samp', 'erlang', 'expectile', 'expon', 'exponnorm', 'exponpow', 'exponweib', 'f', 'f_oneway', 'fatiguelife', 'find_repeats', 'fisher_exact', 'fisk', 'fit', 'fligner', 'foldcauchy', 'foldnorm', 'friedmanchisquare', 'gamma', 'gausshyper', 'gaussian_kde', 'genexpon', 'genextreme', 'gengamma', 'genhalflogistic', 'genhyperbolic', 'geninvgauss', 'genlogistic', 'gennorm', 'genpareto', 'geom', 'gibrat', 'gilbrat', 'gmean', 'gompertz', 'goodness_of_fit', 'gstd', 'gumbel_l', 'gumbel_r', 'gzscore', 'halfcauchy', 'halfgennorm', 'halflogistic', 'halfnorm', 'hmean', 'hypergeom', 'hypsecant', 'invgamma', 'invgauss', 'invweibull', 'invwishart', 'iqr', 'jarque_bera', 'johnsonsb', 'johnsonsu', 'kappa3', 'kappa4', 'kde', 'kendalltau', 'kruskal', 'ks_1samp', 'ks_2samp', 'ksone', 'kstat', 'kstatvar', 'kstest', 'kstwo', 'kstwobign', 'kurtosis', 'kurtosistest', 'laplace', 'laplace_asymmetric', 'levene', 'levy', 'levy_l', 'levy_stable', 'linregress', 'loggamma', 'logistic', 'loglaplace', 'lognorm', 'logser', 'loguniform', 'lomax', 'mannwhitneyu', 'matrix_normal', 'maxwell', 'median_abs_deviation', 'median_test', 'mielke', 'mode', 'moment', 'monte_carlo_test', 'mood', 'morestats', 'moyal', 'mstats', 'mstats_basic', 'mstats_extras', 'multinomial', 'multiscale_graphcorr', 'multivariate_hypergeom', 'multivariate_normal', 'multivariate_t', 'mvn', 'mvsdist', 'nakagami', 'nbinom', 'ncf', 'nchypergeom_fisher', 'nchypergeom_wallenius', 'nct', 'ncx2', 'nhypergeom', 'norm', 'normaltest', 'norminvgauss', 'obrientransform', 'ortho_group', 'page_trend_test', 'pareto', 'pearson3', 'pearsonr', 'percentileofscore', 'permutation_test', 'planck', 'pmean', 'pointbiserialr', 'poisson', 'poisson_means_test', 'power_divergence', 'powerlaw', 'powerlognorm', 'powernorm', 'ppcc_max', 'ppcc_plot', 'probplot', 'qmc', 'randint', 'random_correlation', 'random_table', 'rankdata', 'ranksums', 'rayleigh', 'rdist', 'recipinvgauss', 'reciprocal', 'relfreq', 'rice', 'rv_continuous', 'rv_discrete', 'rv_histogram', 'rvs_ratio_uniforms', 'scoreatpercentile', 'sem', 'semicircular', 'shapiro', 'siegelslopes', 'sigmaclip', 'skellam', 'skew', 'skewcauchy', 'skewnorm', 'skewtest', 'somersd', 'spearmanr', 'special_ortho_group', 'statlib', 'stats', 'studentized_range', 't', 'theilslopes', 'tiecorrect', 'tmax', 'tmean', 'tmin', 'trapezoid', 'trapz', 'triang', 'trim1', 'trim_mean', 'trimboth', 'truncexpon', 'truncnorm', 'truncpareto', 'truncweibull_min', 'tsem', 'tstd', 'ttest_1samp', 'ttest_ind', 'ttest_ind_from_stats', 'ttest_rel', 'tukey_hsd', 'tukeylambda', 'tvar', 'uniform', 'uniform_direction', 'unitary_group', 'variation', 'vonmises', 'vonmises_line', 'wald', 'wasserstein_distance', 'weibull_max', 'weibull_min', 'weightedtau', 'wilcoxon', 'wishart', 'wrapcauchy', 'yeojohnson', 'yeojohnson_llf', 'yeojohnson_normmax', 'yeojohnson_normplot', 'yulesimon', 'zipf', 'zipfian', 'zmap', 'zscore']), ('__builtins__', {'__name__': 'builtins', '__doc__': "Built-in functions, types, exceptions, and other objects.\n\nThis module provides direct access to all 'built-in'\nidentifiers of Python; for example, builtins.len is\nthe full name for the built-in function len().\n\nThis module is not normally accessed explicitly by most\napplications, but can be useful in modules that provide\nobjects with the same name as a built-in value, but in\nwhich the built-in of that name is also needed.", '__package__': '', '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>, origin='built-in'), '__build_class__': <built-in function __build_class__>, '__import__': <built-in function __import__>, 'abs': <built-in function abs>, 'all': <built-in function all>, 'any': <built-in function any>, 'ascii': <built-in function ascii>, 'bin': <built-in function bin>, 'breakpoint': <built-in function breakpoint>, 'callable': <built-in function callable>, 'chr': <built-in function chr>, 'compile': <built-in function compile>, 'delattr': <built-in function delattr>, 'dir': <built-in function dir>, 'divmod': <built-in function divmod>, 'eval': <built-in function eval>, 'exec': <built-in function exec>, 'format': <built-in function format>, 'getattr': <built-in function getattr>, 'globals': <built-in function globals>, 'hasattr': <built-in function hasattr>, 'hash': <built-in function hash>, 'hex': <built-in function hex>, 'id': <built-in function id>, 'input': <built-in function input>, 'isinstance': <built-in function isinstance>, 'issubclass': <built-in function issubclass>, 'iter': <built-in function iter>, 'aiter': <built-in function aiter>, 'len': <built-in function len>, 'locals': <built-in function locals>, 'max': <built-in function max>, 'min': <built-in function min>, 'next': <built-in function next>, 'anext': <built-in function anext>, 'oct': <built-in function oct>, 'ord': <built-in function ord>, 'pow': <built-in function pow>, 'print': <built-in function print>, 'repr': <built-in function repr>, 'round': <built-in function round>, 'setattr': <built-in function setattr>, 'sorted': <built-in function sorted>, 'sum': <built-in function sum>, 'vars': <built-in function vars>, 'None': None, 'Ellipsis': Ellipsis, 'NotImplemented': NotImplemented, 'False': False, 'True': True, 'bool': <class 'bool'>, 'memoryview': <class 'memoryview'>, 'bytearray': <class 'bytearray'>, 'bytes': <class 'bytes'>, 'classmethod': <class 'classmethod'>, 'complex': <class 'complex'>, 'dict': <class 'dict'>, 'enumerate': <class 'enumerate'>, 'filter': <class 'filter'>, 'float': <class 'float'>, 'frozenset': <class 'frozenset'>, 'property': <class 'property'>, 'int': <class 'int'>, 'list': <class 'list'>, 'map': <class 'map'>, 'object': <class 'object'>, 'range': <class 'range'>, 'reversed': <class 'reversed'>, 'set': <class 'set'>, 'slice': <class 'slice'>, 'staticmethod': <class 'staticmethod'>, 'str': <class 'str'>, 'super': <class 'super'>, 'tuple': <class 'tuple'>, 'type': <class 'type'>, 'zip': <class 'zip'>, '__debug__': True, 'BaseException': <class 'BaseException'>, 'BaseExceptionGroup': <class 'BaseExceptionGroup'>, 'Exception': <class 'Exception'>, 'GeneratorExit': <class 'GeneratorExit'>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'SystemExit': <class 'SystemExit'>, 'ArithmeticError': <class 'ArithmeticError'>, 'AssertionError': <class 'AssertionError'>, 'AttributeError': <class 'AttributeError'>, 'BufferError': <class 'BufferError'>, 'EOFError': <class 'EOFError'>, 'ImportError': <class 'ImportError'>, 'LookupError': <class 'LookupError'>, 'MemoryError': <class 'MemoryError'>, 'NameError': <class 'NameError'>, 'OSError': <class 'OSError'>, 'ReferenceError': <class 'ReferenceError'>, 'RuntimeError': <class 'RuntimeError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'StopIteration': <class 'StopIteration'>, 'SyntaxError': <class 'SyntaxError'>, 'SystemError': <class 'SystemError'>, 'TypeError': <class 'TypeError'>, 'ValueError': <class 'ValueError'>, 'Warning': <class 'Warning'>, 'FloatingPointError': <class 'FloatingPointError'>, 'OverflowError': <class 'OverflowError'>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'BytesWarning': <class 'BytesWarning'>, 'DeprecationWarning': <class 'DeprecationWarning'>, 'EncodingWarning': <class 'EncodingWarning'>, 'FutureWarning': <class 'FutureWarning'>, 'ImportWarning': <class 'ImportWarning'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'UserWarning': <class 'UserWarning'>, 'BlockingIOError': <class 'BlockingIOError'>, 'ChildProcessError': <class 'ChildProcessError'>, 'ConnectionError': <class 'ConnectionError'>, 'FileExistsError': <class 'FileExistsError'>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'InterruptedError': <class 'InterruptedError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'PermissionError': <class 'PermissionError'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'TimeoutError': <class 'TimeoutError'>, 'IndentationError': <class 'IndentationError'>, 'IndexError': <class 'IndexError'>, 'KeyError': <class 'KeyError'>, 'ModuleNotFoundError': <class 'ModuleNotFoundError'>, 'NotImplementedError': <class 'NotImplementedError'>, 'RecursionError': <class 'RecursionError'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'UnicodeError': <class 'UnicodeError'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'TabError': <class 'TabError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'ExceptionGroup': <class 'ExceptionGroup'>, 'EnvironmentError': <class 'OSError'>, 'IOError': <class 'OSError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'copyright': Copyright (c) 2001-2023 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'license': Type license() to see the full license text, 'help': Type help() for interactive help, or help(object) for help about object., '__pybind11_internals_v4_gcc_libstdcpp_cxxabi1017__': <capsule object NULL at 0x7fa8498ac330>}), ('__cached__', '/usr/lib/python3/dist-packages/scipy/stats/__pycache__/__init__.cpython-311.pyc'), ('__doc__', "\n.. _statsrefmanual:\n\n==========================================\nStatistical functions (:mod:`scipy.stats`)\n==========================================\n\n.. currentmodule:: scipy.stats\n\nThis module contains a large number of probability distributions,\nsummary and frequency statistics, correlation functions and statistical\ntests, masked statistics, kernel density estimation, quasi-Monte Carlo\nfunctionality, and more.\n\nStatistics is a very large area, and there are topics that are out of scope\nfor SciPy and are covered by other packages. Some of the most important ones\nare:\n\n- `statsmodels <https://www.statsmodels.org/stable/index.html>`__:\n  regression, linear models, time series analysis, extensions to topics\n  also covered by ``scipy.stats``.\n- `Pandas <https://pandas.pydata.org/>`__: tabular data, time series\n  functionality, interfaces to other statistical languages.\n- `PyMC <https://docs.pymc.io/>`__: Bayesian statistical\n  modeling, probabilistic machine learning.\n- `scikit-learn <https://scikit-learn.org/>`__: classification, regression,\n  model selection.\n- `Seaborn <https://seaborn.pydata.org/>`__: statistical data visualization.\n- `rpy2 <https://rpy2.github.io/>`__: Python to R bridge.\n\n\nProbability distributions\n=========================\n\nEach univariate distribution is an instance of a subclass of `rv_continuous`\n(`rv_discrete` for discrete distributions):\n\n.. autosummary::\n   :toctree: generated/\n\n   rv_continuous\n   rv_discrete\n   rv_histogram\n\nContinuous distributions\n------------------------\n\n.. autosummary::\n   :toctree: generated/\n\n   alpha             -- Alpha\n   anglit            -- Anglit\n   arcsine           -- Arcsine\n   argus             -- Argus\n   beta              -- Beta\n   betaprime         -- Beta Prime\n   bradford          -- Bradford\n   burr              -- Burr (Type III)\n   burr12            -- Burr (Type XII)\n   cauchy            -- Cauchy\n   chi               -- Chi\n   chi2              -- Chi-squared\n   cosine            -- Cosine\n   crystalball       -- Crystalball\n   dgamma            -- Double Gamma\n   dweibull          -- Double Weibull\n   erlang            -- Erlang\n   expon             -- Exponential\n   exponnorm         -- Exponentially Modified Normal\n   exponweib         -- Exponentiated Weibull\n   exponpow          -- Exponential Power\n   f                 -- F (Snecdor F)\n   fatiguelife       -- Fatigue Life (Birnbaum-Saunders)\n   fisk              -- Fisk\n   foldcauchy        -- Folded Cauchy\n   foldnorm          -- Folded Normal\n   genlogistic       -- Generalized Logistic\n   gennorm           -- Generalized normal\n   genpareto         -- Generalized Pareto\n   genexpon          -- Generalized Exponential\n   genextreme        -- Generalized Extreme Value\n   gausshyper        -- Gauss Hypergeometric\n   gamma             -- Gamma\n   gengamma          -- Generalized gamma\n   genhalflogistic   -- Generalized Half Logistic\n   genhyperbolic     -- Generalized Hyperbolic\n   geninvgauss       -- Generalized Inverse Gaussian\n   gibrat            -- Gibrat\n   gilbrat           -- Gilbrat\n   gompertz          -- Gompertz (Truncated Gumbel)\n   gumbel_r          -- Right Sided Gumbel, Log-Weibull, Fisher-Tippett, Extreme Value Type I\n   gumbel_l          -- Left Sided Gumbel, etc.\n   halfcauchy        -- Half Cauchy\n   halflogistic      -- Half Logistic\n   halfnorm          -- Half Normal\n   halfgennorm       -- Generalized Half Normal\n   hypsecant         -- Hyperbolic Secant\n   invgamma          -- Inverse Gamma\n   invgauss          -- Inverse Gaussian\n   invweibull        -- Inverse Weibull\n   johnsonsb         -- Johnson SB\n   johnsonsu         -- Johnson SU\n   kappa4            -- Kappa 4 parameter\n   kappa3            -- Kappa 3 parameter\n   ksone             -- Distribution of Kolmogorov-Smirnov one-sided test statistic\n   kstwo             -- Distribution of Kolmogorov-Smirnov two-sided test statistic\n   kstwobign         -- Limiting Distribution of scaled Kolmogorov-Smirnov two-sided test statistic.\n   laplace           -- Laplace\n   laplace_asymmetric    -- Asymmetric Laplace\n   levy              -- Levy\n   levy_l\n   levy_stable\n   logistic          -- Logistic\n   loggamma          -- Log-Gamma\n   loglaplace        -- Log-Laplace (Log Double Exponential)\n   lognorm           -- Log-Normal\n   loguniform        -- Log-Uniform\n   lomax             -- Lomax (Pareto of the second kind)\n   maxwell           -- Maxwell\n   mielke            -- Mielke's Beta-Kappa\n   moyal             -- Moyal\n   nakagami          -- Nakagami\n   ncx2              -- Non-central chi-squared\n   ncf               -- Non-central F\n   nct               -- Non-central Student's T\n   norm              -- Normal (Gaussian)\n   norminvgauss      -- Normal Inverse Gaussian\n   pareto            -- Pareto\n   pearson3          -- Pearson type III\n   powerlaw          -- Power-function\n   powerlognorm      -- Power log normal\n   powernorm         -- Power normal\n   rdist             -- R-distribution\n   rayleigh          -- Rayleigh\n   rice              -- Rice\n   recipinvgauss     -- Reciprocal Inverse Gaussian\n   semicircular      -- Semicircular\n   skewcauchy        -- Skew Cauchy\n   skewnorm          -- Skew normal\n   studentized_range    -- Studentized Range\n   t                 -- Student's T\n   trapezoid         -- Trapezoidal\n   triang            -- Triangular\n   truncexpon        -- Truncated Exponential\n   truncnorm         -- Truncated Normal\n   truncpareto       -- Truncated Pareto\n   truncweibull_min  -- Truncated minimum Weibull distribution\n   tukeylambda       -- Tukey-Lambda\n   uniform           -- Uniform\n   vonmises          -- Von-Mises (Circular)\n   vonmises_line     -- Von-Mises (Line)\n   wald              -- Wald\n   weibull_min       -- Minimum Weibull (see Frechet)\n   weibull_max       -- Maximum Weibull (see Frechet)\n   wrapcauchy        -- Wrapped Cauchy\n\nMultivariate distributions\n--------------------------\n\n.. autosummary::\n   :toctree: generated/\n\n   multivariate_normal    -- Multivariate normal distribution\n   matrix_normal          -- Matrix normal distribution\n   dirichlet              -- Dirichlet\n   wishart                -- Wishart\n   invwishart             -- Inverse Wishart\n   multinomial            -- Multinomial distribution\n   special_ortho_group    -- SO(N) group\n   ortho_group            -- O(N) group\n   unitary_group          -- U(N) group\n   random_correlation     -- random correlation matrices\n   multivariate_t         -- Multivariate t-distribution\n   multivariate_hypergeom -- Multivariate hypergeometric distribution\n   random_table           -- Distribution of random tables with given marginals\n   uniform_direction      -- Uniform distribution on S(N-1)\n\n`scipy.stats.multivariate_normal` methods accept instances\nof the following class to represent the covariance.\n\n.. autosummary::\n   :toctree: generated/\n\n   Covariance             -- Representation of a covariance matrix\n\n\nDiscrete distributions\n----------------------\n\n.. autosummary::\n   :toctree: generated/\n\n   bernoulli                -- Bernoulli\n   betabinom                -- Beta-Binomial\n   binom                    -- Binomial\n   boltzmann                -- Boltzmann (Truncated Discrete Exponential)\n   dlaplace                 -- Discrete Laplacian\n   geom                     -- Geometric\n   hypergeom                -- Hypergeometric\n   logser                   -- Logarithmic (Log-Series, Series)\n   nbinom                   -- Negative Binomial\n   nchypergeom_fisher       -- Fisher's Noncentral Hypergeometric\n   nchypergeom_wallenius    -- Wallenius's Noncentral Hypergeometric\n   nhypergeom               -- Negative Hypergeometric\n   planck                   -- Planck (Discrete Exponential)\n   poisson                  -- Poisson\n   randint                  -- Discrete Uniform\n   skellam                  -- Skellam\n   yulesimon                -- Yule-Simon\n   zipf                     -- Zipf (Zeta)\n   zipfian                  -- Zipfian\n\nAn overview of statistical functions is given below.  Many of these functions\nhave a similar version in `scipy.stats.mstats` which work for masked arrays.\n\nSummary statistics\n==================\n\n.. autosummary::\n   :toctree: generated/\n\n   describe          -- Descriptive statistics\n   gmean             -- Geometric mean\n   hmean             -- Harmonic mean\n   pmean             -- Power mean\n   kurtosis          -- Fisher or Pearson kurtosis\n   mode              -- Modal value\n   moment            -- Central moment\n   expectile         -- Expectile\n   skew              -- Skewness\n   kstat             --\n   kstatvar          --\n   tmean             -- Truncated arithmetic mean\n   tvar              -- Truncated variance\n   tmin              --\n   tmax              --\n   tstd              --\n   tsem              --\n   variation         -- Coefficient of variation\n   find_repeats\n   trim_mean\n   gstd              -- Geometric Standard Deviation\n   iqr\n   sem\n   bayes_mvs\n   mvsdist\n   entropy\n   differential_entropy\n   median_abs_deviation\n\nFrequency statistics\n====================\n\n.. autosummary::\n   :toctree: generated/\n\n   cumfreq\n   percentileofscore\n   scoreatpercentile\n   relfreq\n\n.. autosummary::\n   :toctree: generated/\n\n   binned_statistic     -- Compute a binned statistic for a set of data.\n   binned_statistic_2d  -- Compute a 2-D binned statistic for a set of data.\n   binned_statistic_dd  -- Compute a d-D binned statistic for a set of data.\n\nCorrelation functions\n=====================\n\n.. autosummary::\n   :toctree: generated/\n\n   f_oneway\n   alexandergovern\n   pearsonr\n   spearmanr\n   pointbiserialr\n   kendalltau\n   weightedtau\n   somersd\n   linregress\n   siegelslopes\n   theilslopes\n   multiscale_graphcorr\n\nStatistical tests\n=================\n\n.. autosummary::\n   :toctree: generated/\n\n   ttest_1samp\n   ttest_ind\n   ttest_ind_from_stats\n   ttest_rel\n   chisquare\n   cramervonmises\n   cramervonmises_2samp\n   power_divergence\n   kstest\n   ks_1samp\n   ks_2samp\n   epps_singleton_2samp\n   mannwhitneyu\n   tiecorrect\n   rankdata\n   ranksums\n   wilcoxon\n   kruskal\n   friedmanchisquare\n   brunnermunzel\n   combine_pvalues\n   jarque_bera\n   page_trend_test\n   tukey_hsd\n   poisson_means_test\n\n.. autosummary::\n   :toctree: generated/\n\n   ansari\n   bartlett\n   levene\n   shapiro\n   anderson\n   anderson_ksamp\n   binom_test\n   binomtest\n   fligner\n   median_test\n   mood\n   skewtest\n   kurtosistest\n   normaltest\n   goodness_of_fit\n\n\nQuasi-Monte Carlo\n=================\n\n.. toctree::\n   :maxdepth: 4\n\n   stats.qmc\n\nResampling Methods\n==================\n\n.. autosummary::\n   :toctree: generated/\n\n   bootstrap\n   permutation_test\n   monte_carlo_test\n\nMasked statistics functions\n===========================\n\n.. toctree::\n\n   stats.mstats\n\n\nOther statistical functionality\n===============================\n\nTransformations\n---------------\n\n.. autosummary::\n   :toctree: generated/\n\n   boxcox\n   boxcox_normmax\n   boxcox_llf\n   yeojohnson\n   yeojohnson_normmax\n   yeojohnson_llf\n   obrientransform\n   sigmaclip\n   trimboth\n   trim1\n   zmap\n   zscore\n   gzscore\n\nStatistical distances\n---------------------\n\n.. autosummary::\n   :toctree: generated/\n\n   wasserstein_distance\n   energy_distance\n\nSampling\n--------\n\n.. toctree::\n   :maxdepth: 4\n\n   stats.sampling\n\nRandom variate generation / CDF Inversion\n-----------------------------------------\n\n.. autosummary::\n   :toctree: generated/\n\n   rvs_ratio_uniforms\n\nDistribution Fitting\n--------------------\n\n.. autosummary::\n   :toctree: generated/\n\n   fit\n\nDirectional statistical functions\n---------------------------------\n\n.. autosummary::\n   :toctree: generated/\n\n   directional_stats\n   circmean\n   circvar\n   circstd\n\nContingency table functions\n---------------------------\n\n.. autosummary::\n   :toctree: generated/\n\n   chi2_contingency\n   contingency.crosstab\n   contingency.expected_freq\n   contingency.margins\n   contingency.relative_risk\n   contingency.association\n   contingency.odds_ratio\n   fisher_exact\n   barnard_exact\n   boschloo_exact\n\nPlot-tests\n----------\n\n.. autosummary::\n   :toctree: generated/\n\n   ppcc_max\n   ppcc_plot\n   probplot\n   boxcox_normplot\n   yeojohnson_normplot\n\nUnivariate and multivariate kernel density estimation\n-----------------------------------------------------\n\n.. autosummary::\n   :toctree: generated/\n\n   gaussian_kde\n\nWarnings / Errors used in :mod:`scipy.stats`\n--------------------------------------------\n\n.. autosummary::\n   :toctree: generated/\n\n   DegenerateDataWarning\n   ConstantInputWarning\n   NearConstantInputWarning\n   FitError\n\n"), ('__file__', '/usr/lib/python3/dist-packages/scipy/stats/__init__.py'), ('__loader__', <_frozen_importlib_external.SourceFileLoader object at 0x7fa84b458110>), ('__name__', 'scipy.stats'), ('__package__', 'scipy.stats'), ('__path__', ['/usr/lib/python3/dist-packages/scipy/stats']), ('__spec__', ModuleSpec(name='scipy.stats', loader=<_frozen_importlib_external.SourceFileLoader object at 0x7fa84b458110>, origin='/usr/lib/python3/dist-packages/scipy/stats/__init__.py', submodule_search_locations=['/usr/lib/python3/dist-packages/scipy/stats'])), ('_axis_nan_policy', <module 'scipy.stats._axis_nan_policy' from '/usr/lib/python3/dist-packages/scipy/stats/_axis_nan_policy.py'>), ('_biasedurn', <module 'scipy.stats._biasedurn' from '/usr/lib/python3/dist-packages/scipy/stats/_biasedurn.cpython-311-x86_64-linux-gnu.so'>), ('_binned_statistic', <module 'scipy.stats._binned_statistic' from '/usr/lib/python3/dist-packages/scipy/stats/_binned_statistic.py'>), ('_binomtest', <module 'scipy.stats._binomtest' from '/usr/lib/python3/dist-packages/scipy/stats/_binomtest.py'>), ('_boost', <module 'scipy.stats._boost' from '/usr/lib/python3/dist-packages/scipy/stats/_boost/__init__.py'>), ('_common', <module 'scipy.stats._common' from '/usr/lib/python3/dist-packages/scipy/stats/_common.py'>), ('_constants', <module 'scipy.stats._constants' from '/usr/lib/python3/dist-packages/scipy/stats/_constants.py'>), ('_continuous_distns', <module 'scipy.stats._continuous_distns' from '/usr/lib/python3/dist-packages/scipy/stats/_continuous_distns.py'>), ('_covariance', <module 'scipy.stats._covariance' from '/usr/lib/python3/dist-packages/scipy/stats/_covariance.py'>), ('_crosstab', <module 'scipy.stats._crosstab' from '/usr/lib/python3/dist-packages/scipy/stats/_crosstab.py'>), ('_discrete_distns', <module 'scipy.stats._discrete_distns' from '/usr/lib/python3/dist-packages/scipy/stats/_discrete_distns.py'>), ('_distn_infrastructure', <module 'scipy.stats._distn_infrastructure' from '/usr/lib/python3/dist-packages/scipy/stats/_distn_infrastructure.py'>), ('_distr_params', <module 'scipy.stats._distr_params' from '/usr/lib/python3/dist-packages/scipy/stats/_distr_params.py'>), ('_entropy', <module 'scipy.stats._entropy' from '/usr/lib/python3/dist-packages/scipy/stats/_entropy.py'>), ('_fit', <module 'scipy.stats._fit' from '/usr/lib/python3/dist-packages/scipy/stats/_fit.py'>), ('_hypotests', <module 'scipy.stats._hypotests' from '/usr/lib/python3/dist-packages/scipy/stats/_hypotests.py'>), ('_kde', <module 'scipy.stats._kde' from '/usr/lib/python3/dist-packages/scipy/stats/_kde.py'>), ('_ksstats', <module 'scipy.stats._ksstats' from '/usr/lib/python3/dist-packages/scipy/stats/_ksstats.py'>), ('_levy_stable', <module 'scipy.stats._levy_stable' from '/usr/lib/python3/dist-packages/scipy/stats/_levy_stable/__init__.py'>), ('_mannwhitneyu', <module 'scipy.stats._mannwhitneyu' from '/usr/lib/python3/dist-packages/scipy/stats/_mannwhitneyu.py'>), ('_morestats', <module 'scipy.stats._morestats' from '/usr/lib/python3/dist-packages/scipy/stats/_morestats.py'>), ('_mstats_basic', <module 'scipy.stats._mstats_basic' from '/usr/lib/python3/dist-packages/scipy/stats/_mstats_basic.py'>), ('_mstats_extras', <module 'scipy.stats._mstats_extras' from '/usr/lib/python3/dist-packages/scipy/stats/_mstats_extras.py'>), ('_multivariate', <module 'scipy.stats._multivariate' from '/usr/lib/python3/dist-packages/scipy/stats/_multivariate.py'>), ('_mvn', <module 'scipy.stats._mvn' from '/usr/lib/python3/dist-packages/scipy/stats/_mvn.cpython-311-x86_64-linux-gnu.so'>), ('_odds_ratio', <module 'scipy.stats._odds_ratio' from '/usr/lib/python3/dist-packages/scipy/stats/_odds_ratio.py'>), ('_page_trend_test', <module 'scipy.stats._page_trend_test' from '/usr/lib/python3/dist-packages/scipy/stats/_page_trend_test.py'>), ('_qmc', <module 'scipy.stats._qmc' from '/usr/lib/python3/dist-packages/scipy/stats/_qmc.py'>), ('_qmc_cy', <module 'scipy.stats._qmc_cy' from '/usr/lib/python3/dist-packages/scipy/stats/_qmc_cy.cpython-311-x86_64-linux-gnu.so'>), ('_rcont', <module 'scipy.stats._rcont' from '/usr/lib/python3/dist-packages/scipy/stats/_rcont/__init__.py'>), ('_relative_risk', <module 'scipy.stats._relative_risk' from '/usr/lib/python3/dist-packages/scipy/stats/_relative_risk.py'>), ('_resampling', <module 'scipy.stats._resampling' from '/usr/lib/python3/dist-packages/scipy/stats/_resampling.py'>), ('_rvs_sampling', <module 'scipy.stats._rvs_sampling' from '/usr/lib/python3/dist-packages/scipy/stats/_rvs_sampling.py'>), ('_sobol', <module 'scipy.stats._sobol' from '/usr/lib/python3/dist-packages/scipy/stats/_sobol.cpython-311-x86_64-linux-gnu.so'>), ('_statlib', <module 'scipy.stats._statlib' from '/usr/lib/python3/dist-packages/scipy/stats/_statlib.cpython-311-x86_64-linux-gnu.so'>), ('_stats', <module 'scipy.stats._stats' from '/usr/lib/python3/dist-packages/scipy/stats/_stats.cpython-311-x86_64-linux-gnu.so'>), ('_stats_mstats_common', <module 'scipy.stats._stats_mstats_common' from '/usr/lib/python3/dist-packages/scipy/stats/_stats_mstats_common.py'>), ('_stats_py', <module 'scipy.stats._stats_py' from '/usr/lib/python3/dist-packages/scipy/stats/_stats_py.py'>), ('_stats_pythran', <module 'scipy.stats._stats_pythran' from '/usr/lib/python3/dist-packages/scipy/stats/_stats_pythran.cpython-311-x86_64-linux-gnu.so'>), ('_tukeylambda_stats', <module 'scipy.stats._tukeylambda_stats' from '/usr/lib/python3/dist-packages/scipy/stats/_tukeylambda_stats.py'>), ('_variation', <module 'scipy.stats._variation' from '/usr/lib/python3/dist-packages/scipy/stats/_variation.py'>), ('_warnings_errors', <module 'scipy.stats._warnings_errors' from '/usr/lib/python3/dist-packages/scipy/stats/_warnings_errors.py'>), ('alexandergovern', <function alexandergovern at 0x7fa8486a3600>), ('alpha', <scipy.stats._continuous_distns.alpha_gen object at 0x7fa84ad9e410>), ('anderson', <function anderson at 0x7fa848428720>), ('anderson_ksamp', <function anderson_ksamp at 0x7fa848428ea0>), ('anglit', <scipy.stats._continuous_distns.anglit_gen object at 0x7fa848ddac50>), ('ansari', <function ansari at 0x7fa848429300>), ('arcsine', <scipy.stats._continuous_distns.arcsine_gen object at 0x7fa848ddb390>), ('argus', <scipy.stats._continuous_distns.argus_gen object at 0x7fa848e82850>), ('barnard_exact', <function barnard_exact at 0x7fa848609080>), ('bartlett', <function bartlett at 0x7fa848429a80>), ('bayes_mvs', <function bayes_mvs at 0x7fa8484128e0>), ('bernoulli', <scipy.stats._discrete_distns.bernoulli_gen object at 0x7fa84894ce10>), ('beta', <scipy.stats._continuous_distns.beta_gen object at 0x7fa848ddbc10>), ('betabinom', <scipy.stats._discrete_distns.betabinom_gen object at 0x7fa84894e150>), ('betaprime', <scipy.stats._continuous_distns.betaprime_gen object at 0x7fa848ddbe90>), ('biasedurn', <module 'scipy.stats.biasedurn' from '/usr/lib/python3/dist-packages/scipy/stats/biasedurn.py'>), ('binned_statistic', <function binned_statistic at 0x7fa848434180>), ('binned_statistic_2d', <function binned_statistic_2d at 0x7fa8484345e0>), ('binned_statistic_dd', <function binned_statistic_dd at 0x7fa848434ea0>), ('binom', <scipy.stats._discrete_distns.binom_gen object at 0x7fa8488c7c50>), ('binom_test', <function binom_test at 0x7fa84842a0c0>), ('binomtest', <function binomtest at 0x7fa848699940>), ('boltzmann', <scipy.stats._discrete_distns.boltzmann_gen object at 0x7fa84895d4d0>), ('bootstrap', <function bootstrap at 0x7fa8486985e0>), ('boschloo_exact', <function boschloo_exact at 0x7fa848609120>), ('boxcox', <function boxcox at 0x7fa848413560>), ('boxcox_llf', <function boxcox_llf at 0x7fa848413420>), ('boxcox_normmax', <function boxcox_normmax at 0x7fa848413600>), ('boxcox_normplot', <function boxcox_normplot at 0x7fa848413740>), ('bradford', <scipy.stats._continuous_distns.bradford_gen object at 0x7fa848dca4d0>), ('brunnermunzel', <function brunnermunzel at 0x7fa8486b96c0>), ('burr', <scipy.stats._continuous_distns.burr_gen object at 0x7fa848de4890>), ('burr12', <scipy.stats._continuous_distns.burr12_gen object at 0x7fa848de4ed0>), ('cauchy', <scipy.stats._continuous_distns.cauchy_gen object at 0x7fa848de5b10>), ('chi', <scipy.stats._continuous_distns.chi_gen object at 0x7fa84aaea450>), ('chi2', <scipy.stats._continuous_distns.chi2_gen object at 0x7fa84a072e10>), ('chi2_contingency', <function chi2_contingency at 0x7fa848411da0>), ('chisquare', <function chisquare at 0x7fa8486b72e0>), ('circmean', <function circmean at 0x7fa84842bb00>), ('circstd', <function circstd at 0x7fa84842bc40>), ('circvar', <function circvar at 0x7fa84842bba0>), ('combine_pvalues', <function combine_pvalues at 0x7fa8486b9760>), ('contingency', <module 'scipy.stats.contingency' from '/usr/lib/python3/dist-packages/scipy/stats/contingency.py'>), ('cosine', <scipy.stats._continuous_distns.cosine_gen object at 0x7fa848de6c50>), ('cramervonmises', <function cramervonmises at 0x7fa848608900>), ('cramervonmises_2samp', <function cramervonmises_2samp at 0x7fa848609800>), ('crystalball', <scipy.stats._continuous_distns.crystalball_gen object at 0x7fa848e820d0>), ('cumfreq', <function cumfreq at 0x7fa8486a1da0>), ('describe', <function describe at 0x7fa8486a02c0>), ('dgamma', <scipy.stats._continuous_distns.dgamma_gen object at 0x7fa848dca510>), ('differential_entropy', <function differential_entropy at 0x7fa848967380>), ('directional_stats', <function directional_stats at 0x7fa84842bce0>), ('dirichlet', <scipy.stats._multivariate.dirichlet_gen object at 0x7fa8484a5510>), ('distributions', <module 'scipy.stats.distributions' from '/usr/lib/python3/dist-packages/scipy/stats/distributions.py'>), ('dlaplace', <scipy.stats._discrete_distns.dlaplace_gen object at 0x7fa84895ec50>), ('dweibull', <scipy.stats._continuous_distns.dweibull_gen object at 0x7fa848de7610>), ('energy_distance', <function energy_distance at 0x7fa8486b98a0>), ('entropy', <function entropy at 0x7fa8489672e0>), ('epps_singleton_2samp', <function epps_singleton_2samp at 0x7fa848608400>), ('erlang', <scipy.stats._continuous_distns.erlang_gen object at 0x7fa84abfea10>), ('expectile', <function expectile at 0x7fa8486ba0c0>), ('expon', <scipy.stats._continuous_distns.expon_gen object at 0x7fa848de7cd0>), ('exponnorm', <scipy.stats._continuous_distns.exponnorm_gen object at 0x7fa84ad9e390>), ('exponpow', <scipy.stats._continuous_distns.exponpow_gen object at 0x7fa84aaea490>), ('exponweib', <scipy.stats._continuous_distns.exponweib_gen object at 0x7fa848df4b10>), ('f', <scipy.stats._continuous_distns.f_gen object at 0x7fa848dca750>), ('f_oneway', <function f_oneway at 0x7fa8486a3560>), ('fatiguelife', <scipy.stats._continuous_distns.fatiguelife_gen object at 0x7fa84abbe050>), ('find_repeats', <function find_repeats at 0x7fa8486b9e40>), ('fisher_exact', <function fisher_exact at 0x7fa8486b45e0>), ('fisk', <scipy.stats._continuous_distns.fisk_gen object at 0x7fa848de5510>), ('fit', <function fit at 0x7fa8486baf20>), ('fligner', <function fligner at 0x7fa84842a520>), ('foldcauchy', <scipy.stats._continuous_distns.foldcauchy_gen object at 0x7fa848dca7d0>), ('foldnorm', <scipy.stats._continuous_distns.foldnorm_gen object at 0x7fa84aacedd0>), ('friedmanchisquare', <function friedmanchisquare at 0x7fa8486b9260>), ('gamma', <scipy.stats._continuous_distns.gamma_gen object at 0x7fa848e14c50>), ('gausshyper', <scipy.stats._continuous_distns.gausshyper_gen object at 0x7fa848e1d450>), ('gaussian_kde', <class 'scipy.stats._kde.gaussian_kde'>), ('genexpon', <scipy.stats._continuous_distns.genexpon_gen object at 0x7fa848dca810>), ('genextreme', <scipy.stats._continuous_distns.genextreme_gen object at 0x7fa84af97b50>), ('gengamma', <scipy.stats._continuous_distns.gengamma_gen object at 0x7fa848e157d0>), ('genhalflogistic', <scipy.stats._continuous_distns.genhalflogistic_gen object at 0x7fa848e15a10>), ('genhyperbolic', <scipy.stats._continuous_distns.genhyperbolic_gen object at 0x7fa848e16390>), ('geninvgauss', <scipy.stats._continuous_distns.geninvgauss_gen object at 0x7fa84a062810>), ('genlogistic', <scipy.stats._continuous_distns.genlogistic_gen object at 0x7fa84aaea7d0>), ('gennorm', <scipy.stats._continuous_distns.gennorm_gen object at 0x7fa848e81390>), ('genpareto', <scipy.stats._continuous_distns.genpareto_gen object at 0x7fa84ac9eed0>), ('geom', <scipy.stats._discrete_distns.geom_gen object at 0x7fa84894e990>), ('gibrat', <scipy.stats._continuous_distns.gibrat_gen object at 0x7fa848e33950>), ('gilbrat', <scipy.stats._continuous_distns.gilbrat_gen object at 0x7fa848e40150>), ('gmean', <function gmean at 0x7fa84869a480>), ('gompertz', <scipy.stats._continuous_distns.gompertz_gen object at 0x7fa848e163d0>), ('goodness_of_fit', <function goodness_of_fit at 0x7fa8486bb9c0>), ('gstd', <function gstd at 0x7fa8486a27a0>), ('gumbel_l', <scipy.stats._continuous_distns.gumbel_l_gen object at 0x7fa848e172d0>), ('gumbel_r', <scipy.stats._continuous_distns.gumbel_r_gen object at 0x7fa84a062750>), ('gzscore', <function gzscore at 0x7fa8486a2660>), ('halfcauchy', <scipy.stats._continuous_distns.halfcauchy_gen object at 0x7fa848e17990>), ('halfgennorm', <scipy.stats._continuous_distns.halfgennorm_gen object at 0x7fa848e819d0>), ('halflogistic', <scipy.stats._continuous_distns.halflogistic_gen object at 0x7fa84af3e090>), ('halfnorm', <scipy.stats._continuous_distns.halfnorm_gen object at 0x7fa848e1c710>), ('hmean', <function hmean at 0x7fa84869a7a0>), ('hypergeom', <scipy.stats._discrete_distns.hypergeom_gen object at 0x7fa84894f450>), ('hypsecant', <scipy.stats._continuous_distns.hypsecant_gen object at 0x7fa848e1cd50>), ('invgamma', <scipy.stats._continuous_distns.invgamma_gen object at 0x7fa848e1d890>), ('invgauss', <scipy.stats._continuous_distns.invgauss_gen object at 0x7fa848dca790>), ('invweibull', <scipy.stats._continuous_distns.invweibull_gen object at 0x7fa848e1ef10>), ('invwishart', <scipy.stats._multivariate.invwishart_gen object at 0x7fa8484a5790>), ('iqr', <function iqr at 0x7fa8486a2840>), ('jarque_bera', <function jarque_bera at 0x7fa8486a13a0>), ('johnsonsb', <scipy.stats._continuous_distns.johnsonsb_gen object at 0x7fa848e1f650>), ('johnsonsu', <scipy.stats._continuous_distns.johnsonsu_gen object at 0x7fa848e1fc50>), ('kappa3', <scipy.stats._continuous_distns.kappa3_gen object at 0x7fa848e43390>), ('kappa4', <scipy.stats._continuous_distns.kappa4_gen object at 0x7fa848e42cd0>), ('kde', <module 'scipy.stats.kde' from '/usr/lib/python3/dist-packages/scipy/stats/kde.py'>), ('kendalltau', <function kendalltau at 0x7fa8486b47c0>), ('kruskal', <function kruskal at 0x7fa8486b8ea0>), ('ks_1samp', <function ks_1samp at 0x7fa8486b7c40>), ('ks_2samp', <function ks_2samp at 0x7fa8486b7f60>), ('ksone', <scipy.stats._continuous_distns.ksone_gen object at 0x7fa8494a4590>), ('kstat', <function kstat at 0x7fa848412d40>), ('kstatvar', <function kstatvar at 0x7fa848413060>), ('kstest', <function kstest at 0x7fa8486b8180>), ('kstwo', <scipy.stats._continuous_distns.kstwo_gen object at 0x7fa84a072a90>), ('kstwobign', <scipy.stats._continuous_distns.kstwobign_gen object at 0x7fa84ac9ef10>), ('kurtosis', <function kurtosis at 0x7fa84869bec0>), ('kurtosistest', <function kurtosistest at 0x7fa8486a0c20>), ('laplace', <scipy.stats._continuous_distns.laplace_gen object at 0x7fa848e30310>), ('laplace_asymmetric', <scipy.stats._continuous_distns.laplace_asymmetric_gen object at 0x7fa84a072850>), ('levene', <function levene at 0x7fa848429ee0>), ('levy', <scipy.stats._continuous_distns.levy_gen object at 0x7fa848dc21d0>), ('levy_l', <scipy.stats._continuous_distns.levy_l_gen object at 0x7fa849882150>), ('levy_stable', <scipy.stats._levy_stable.levy_stable_gen object at 0x7fa848933890>), ('linregress', <function linregress at 0x7fa8489993a0>), ('loggamma', <scipy.stats._continuous_distns.loggamma_gen object at 0x7fa848e324d0>), ('logistic', <scipy.stats._continuous_distns.logistic_gen object at 0x7fa848e31d10>), ('loglaplace', <scipy.stats._continuous_distns.loglaplace_gen object at 0x7fa848e32ad0>), ('lognorm', <scipy.stats._continuous_distns.lognorm_gen object at 0x7fa848e331d0>), ('logser', <scipy.stats._discrete_distns.logser_gen object at 0x7fa848dca450>), ('loguniform', <scipy.stats._continuous_distns.reciprocal_gen object at 0x7fa848e65a50>), ('lomax', <scipy.stats._continuous_distns.lomax_gen object at 0x7fa848e52a10>), ('mannwhitneyu', <function mannwhitneyu at 0x7fa8484ba480>), ('matrix_normal', <scipy.stats._multivariate.matrix_normal_gen object at 0x7fa8484a5350>), ('maxwell', <scipy.stats._continuous_distns.maxwell_gen object at 0x7fa848e41910>), ('median_abs_deviation', <function median_abs_deviation at 0x7fa8486a2980>), ('median_test', <function median_test at 0x7fa84842b9c0>), ('mielke', <scipy.stats._continuous_distns.mielke_gen object at 0x7fa84aacec10>), ('mode', <function mode at 0x7fa84869ae80>), ('moment', <function moment at 0x7fa84869b740>), ('monte_carlo_test', <function monte_carlo_test at 0x7fa8486989a0>), ('mood', <function mood at 0x7fa84842a7a0>), ('morestats', <module 'scipy.stats.morestats' from '/usr/lib/python3/dist-packages/scipy/stats/morestats.py'>), ('moyal', <scipy.stats._continuous_distns.moyal_gen object at 0x7fa848e43a90>), ('mstats', <module 'scipy.stats.mstats' from '/usr/lib/python3/dist-packages/scipy/stats/mstats.py'>), ('mstats_basic', <module 'scipy.stats.mstats_basic' from '/usr/lib/python3/dist-packages/scipy/stats/mstats_basic.py'>), ('mstats_extras', <module 'scipy.stats.mstats_extras' from '/usr/lib/python3/dist-packages/scipy/stats/mstats_extras.py'>), ('multinomial', <scipy.stats._multivariate.multinomial_gen object at 0x7fa8484a56d0>), ('multiscale_graphcorr', <function multiscale_graphcorr at 0x7fa8486b5120>), ('multivariate_hypergeom', <scipy.stats._multivariate.multivariate_hypergeom_gen object at 0x7fa8484a6190>), ('multivariate_normal', <scipy.stats._multivariate.multivariate_normal_gen object at 0x7fa8484a4290>), ('multivariate_t', <scipy.stats._multivariate.multivariate_t_gen object at 0x7fa8484a6150>), ('mvn', <module 'scipy.stats.mvn' from '/usr/lib/python3/dist-packages/scipy/stats/mvn.py'>), ('mvsdist', <function mvsdist at 0x7fa848412980>), ('nakagami', <scipy.stats._continuous_distns.nakagami_gen object at 0x7fa848e50290>), ('nbinom', <scipy.stats._discrete_distns.nbinom_gen object at 0x7fa84894e590>), ('ncf', <scipy.stats._continuous_distns.ncf_gen object at 0x7fa848e50e10>), ('nchypergeom_fisher', <scipy.stats._discrete_distns.nchypergeom_fisher_gen object at 0x7fa8488ec110>), ('nchypergeom_wallenius', <scipy.stats._discrete_distns.nchypergeom_wallenius_gen object at 0x7fa848968dd0>), ('nct', <scipy.stats._continuous_distns.nct_gen object at 0x7fa848e51a50>), ('ncx2', <scipy.stats._continuous_distns.ncx2_gen object at 0x7fa848e50790>), ('nhypergeom', <scipy.stats._discrete_distns.nhypergeom_gen object at 0x7fa84894f610>), ('norm', <scipy.stats._continuous_distns.norm_gen object at 0x7fa84acb0b50>), ('normaltest', <function normaltest at 0x7fa8486a1080>), ('norminvgauss', <scipy.stats._continuous_distns.norminvgauss_gen object at 0x7fa848e1e890>), ('obrientransform', <function obrientransform at 0x7fa8486a22a0>), ('ortho_group', <scipy.stats._multivariate.ortho_group_gen object at 0x7fa8484a5d10>), ('page_trend_test', <function page_trend_test at 0x7fa84846f4c0>), ('pareto', <scipy.stats._continuous_distns.pareto_gen object at 0x7fa848e52190>), ('pearson3', <scipy.stats._continuous_distns.pearson3_gen object at 0x7fa848e53090>), ('pearsonr', <function pearsonr at 0x7fa8486b4360>), ('percentileofscore', <function percentileofscore at 0x7fa8486a14e0>), ('permutation_test', <function permutation_test at 0x7fa8486994e0>), ('planck', <scipy.stats._discrete_distns.planck_gen object at 0x7fa84895cd50>), ('pmean', <function pmean at 0x7fa84869aac0>), ('pointbiserialr', <function pointbiserialr at 0x7fa8486b4720>), ('poisson', <scipy.stats._discrete_distns.poisson_gen object at 0x7fa84ad9e3d0>), ('poisson_means_test', <function poisson_means_test at 0x7fa8486084a0>), ('power_divergence', <function power_divergence at 0x7fa8486b7240>), ('powerlaw', <scipy.stats._continuous_distns.powerlaw_gen object at 0x7fa848e53810>), ('powerlognorm', <scipy.stats._continuous_distns.powerlognorm_gen object at 0x7fa848e53f50>), ('powernorm', <scipy.stats._continuous_distns.powernorm_gen object at 0x7fa848e645d0>), ('ppcc_max', <function ppcc_max at 0x7fa8484132e0>), ('ppcc_plot', <function ppcc_plot at 0x7fa848413380>), ('probplot', <function probplot at 0x7fa848413100>), ('qmc', <module 'scipy.stats.qmc' from '/usr/lib/python3/dist-packages/scipy/stats/qmc.py'>), ('randint', <scipy.stats._discrete_distns.randint_gen object at 0x7fa84895dad0>), ('random_correlation', <scipy.stats._multivariate.random_correlation_gen object at 0x7fa8484a5b10>), ('random_table', <scipy.stats._multivariate.random_table_gen object at 0x7fa8484a6650>), ('rankdata', <function rankdata at 0x7fa8486ba020>), ('ranksums', <function ranksums at 0x7fa8486b8860>), ('rayleigh', <scipy.stats._continuous_distns.rayleigh_gen object at 0x7fa848e65150>), ('rdist', <scipy.stats._continuous_distns.rdist_gen object at 0x7fa848e64a10>), ('recipinvgauss', <scipy.stats._continuous_distns.recipinvgauss_gen object at 0x7fa848e66cd0>), ('reciprocal', <scipy.stats._continuous_distns.reciprocal_gen object at 0x7fa848e65fd0>), ('relfreq', <function relfreq at 0x7fa8486a2200>), ('rice', <scipy.stats._continuous_distns.rice_gen object at 0x7fa848e665d0>), ('rv_continuous', <class 'scipy.stats._distn_infrastructure.rv_continuous'>), ('rv_discrete', <class 'scipy.stats._distn_infrastructure.rv_discrete'>), ('rv_histogram', <class 'scipy.stats._continuous_distns.rv_histogram'>), ('rvs_ratio_uniforms', <function rvs_ratio_uniforms at 0x7fa84846f420>), ('scoreatpercentile', <function scoreatpercentile at 0x7fa8486a1260>), ('sem', <function sem at 0x7fa8486a2340>), ('semicircular', <scipy.stats._continuous_distns.semicircular_gen object at 0x7fa848e67310>), ('shapiro', <function shapiro at 0x7fa848413ec0>), ('siegelslopes', <function siegelslopes at 0x7fa848999580>), ('sigmaclip', <function sigmaclip at 0x7fa8486a2de0>), ('skellam', <scipy.stats._discrete_distns.skellam_gen object at 0x7fa84895f150>), ('skew', <function skew at 0x7fa84869bba0>), ('skewcauchy', <scipy.stats._continuous_distns.skewcauchy_gen object at 0x7fa848e67950>), ('skewnorm', <scipy.stats._continuous_distns.skew_norm_gen object at 0x7fa848e67f90>), ('skewtest', <function skewtest at 0x7fa8486a07c0>), ('somersd', <function somersd at 0x7fa848608c20>), ('spearmanr', <function spearmanr at 0x7fa8486b4680>), ('special_ortho_group', <scipy.stats._multivariate.special_ortho_group_gen object at 0x7fa8484a5990>), ('statlib', <module 'scipy.stats.statlib' from '/usr/lib/python3/dist-packages/scipy/stats/statlib.py'>), ('stats', <module 'scipy.stats.stats' from '/usr/lib/python3/dist-packages/scipy/stats/stats.py'>), ('studentized_range', <scipy.stats._continuous_distns.studentized_range_gen object at 0x7fa848dcab50>), ('t', <scipy.stats._continuous_distns.t_gen object at 0x7fa848e51290>), ('test', <scipy._lib._testutils.PytestTester object at 0x7fa8489333d0>), ('theilslopes', <function theilslopes at 0x7fa848999440>), ('tiecorrect', <function tiecorrect at 0x7fa8486b8040>), ('tmax', <function tmax at 0x7fa84869b1a0>), ('tmean', <function tmean at 0x7fa84869afc0>), ('tmin', <function tmin at 0x7fa84869b100>), ('trapezoid', <scipy.stats._continuous_distns.trapezoid_gen object at 0x7fa848e704d0>), ('trapz', <scipy.stats._continuous_distns.trapezoid_gen object at 0x7fa848e70b90>), ('triang', <scipy.stats._continuous_distns.triang_gen object at 0x7fa848e711d0>), ('trim1', <function trim1 at 0x7fa8486a2f20>), ('trim_mean', <function trim_mean at 0x7fa8486a2fc0>), ('trimboth', <function trimboth at 0x7fa8486a2e80>), ('truncexpon', <scipy.stats._continuous_distns.truncexpon_gen object at 0x7fa848e71810>), ('truncnorm', <scipy.stats._continuous_distns.truncnorm_gen object at 0x7fa848e71e50>), ('truncpareto', <scipy.stats._continuous_distns.truncpareto_gen object at 0x7fa848e722d0>), ('truncweibull_min', <scipy.stats._continuous_distns.truncweibull_min_gen object at 0x7fa848df6e50>), ('tsem', <function tsem at 0x7fa84869b2e0>), ('tstd', <function tstd at 0x7fa84869b240>), ('ttest_1samp', <function ttest_1samp at 0x7fa8486b5ee0>), ('ttest_ind', <function ttest_ind at 0x7fa8486b6700>), ('ttest_ind_from_stats', <function ttest_ind_from_stats at 0x7fa8486b65c0>), ('ttest_rel', <function ttest_rel at 0x7fa8486b6d40>), ('tukey_hsd', <function tukey_hsd at 0x7fa848609b20>), ('tukeylambda', <scipy.stats._continuous_distns.tukeylambda_gen object at 0x7fa848e72b90>), ('tvar', <function tvar at 0x7fa84869b060>), ('uniform', <scipy.stats._continuous_distns.uniform_gen object at 0x7fa848d97a50>), ('uniform_direction', <scipy.stats._multivariate.uniform_direction_gen object at 0x7fa8484a6910>), ('unitary_group', <scipy.stats._multivariate.unitary_group_gen object at 0x7fa8484a5f50>), ('variation', <function variation at 0x7fa8486ba200>), ('vonmises', <scipy.stats._continuous_distns.vonmises_gen object at 0x7fa848dc8a90>), ('vonmises_line', <scipy.stats._continuous_distns.vonmises_gen object at 0x7fa848e73c90>), ('wald', <scipy.stats._continuous_distns.wald_gen object at 0x7fa848e80510>), ('wasserstein_distance', <function wasserstein_distance at 0x7fa8486b9800>), ('weibull_max', <scipy.stats._continuous_distns.weibull_max_gen object at 0x7fa848df7450>), ('weibull_min', <scipy.stats._continuous_distns.weibull_min_gen object at 0x7fa848df6810>), ('weightedtau', <function weightedtau at 0x7fa8486b4860>), ('wilcoxon', <function wilcoxon at 0x7fa84842b240>), ('wishart', <scipy.stats._multivariate.wishart_gen object at 0x7fa8484a59d0>), ('wrapcauchy', <scipy.stats._continuous_distns.wrapcauchy_gen object at 0x7fa848e80d50>), ('yeojohnson', <function yeojohnson at 0x7fa8484137e0>), ('yeojohnson_llf', <function yeojohnson_llf at 0x7fa848413920>), ('yeojohnson_normmax', <function yeojohnson_normmax at 0x7fa8484139c0>), ('yeojohnson_normplot', <function yeojohnson_normplot at 0x7fa848413a60>), ('yulesimon', <scipy.stats._discrete_distns.yulesimon_gen object at 0x7fa84895f890>), ('zipf', <scipy.stats._discrete_distns.zipf_gen object at 0x7fa84895e190>), ('zipfian', <scipy.stats._discrete_distns.zipfian_gen object at 0x7fa84895e5d0>), ('zmap', <function zmap at 0x7fa8486a2700>), ('zscore', <function zscore at 0x7fa8486a25c0>)]
<class 'scipy.stats._continuous_distns.alpha_gen'>
dist.params: FitParams(a=5e-324, loc=0.49956039235756144, scale=1.0)
<class 'scipy.stats._continuous_distns.anglit_gen'>
dist.params: FitParams(loc=25.950930228482854, scale=69.48114613995993)
<class 'scipy.stats._continuous_distns.arcsine_gen'>
dist.params: FitParams(loc=0.9999999999999929, scale=77.00000003123353)
<class 'scipy.stats._continuous_distns.argus_gen'>
dist.params: FitParams(chi=10.006703925928134, loc=1.0048817088450868, scale=1.0)
<class 'scipy.stats._discrete_distns.bernoulli_gen'>
dist.params: FitParams(p=0.44478794310319253, loc=2.0)
<class 'scipy.stats._continuous_distns.beta_gen'>
dist.params: FitParams(a=16.893560254668245, b=25.364363493434773, loc=0.0, scale=1.0)
<class 'scipy.stats._discrete_distns.betabinom_gen'>
A `bounds` sequence must contain at least 3 elements: tuples specifying the lower and upper bounds of all shape parameters n, a, b.
<class 'scipy.stats._continuous_distns.betaprime_gen'>
dist.params: FitParams(a=4.622669315255389, b=1.0336068605318356, loc=0.0, scale=1.0)
<class 'scipy.stats._discrete_distns.binom_gen'>
dist.params: FitParams(n=100.0, p=0.14290321995015184, loc=0.0)
<class 'scipy.stats._discrete_distns.boltzmann_gen'>
dist.params: FitParams(lambda_=0.06566628299959229, N=79.0, loc=0.0)
<class 'scipy.stats._continuous_distns.bradford_gen'>
dist.params: FitParams(c=84.55023762674065, loc=1.9981280023385395, scale=1.0)
<class 'scipy.stats._continuous_distns.burr_gen'>
dist.params: FitParams(c=1.0083181952103448, d=4.51668057393547, loc=0.0, scale=1.0)
<class 'scipy.stats._continuous_distns.burr12_gen'>
dist.params: FitParams(c=64.47291221849511, d=0.007981790865320065, loc=0.0, scale=1.0)
<class 'scipy.stats._continuous_distns.cauchy_gen'>
dist.params: FitParams(loc=3.464415178826941, scale=3.6362332620388043)
<class 'scipy.stats._continuous_distns.chi_gen'>
dist.params: FitParams(df=40.02476378928646, loc=0.3514035105165305, scale=1.0)
<class 'scipy.stats._continuous_distns.chi2_gen'>
dist.params: FitParams(df=7.95025100859337, loc=0.0, scale=1.0)
<class 'scipy.stats._continuous_distns.cosine_gen'>
dist.params: FitParams(loc=21.21250785975232, scale=19.820742610363673)
<class 'scipy.stats._continuous_distns.crystalball_gen'>
dist.params: FitParams(beta=11.921748048413924, m=40.204578450223465, loc=0.0, scale=1.0)
<class 'scipy.stats._continuous_distns.dgamma_gen'>
dist.params: FitParams(a=30.13980562618788, loc=43.10871838959007, scale=1.0)
<class 'scipy.stats._discrete_distns.dlaplace_gen'>
dist.params: FitParams(a=0.08482972803622174, loc=4.0)
<class 'scipy.stats._continuous_distns.dweibull_gen'>
dist.params: FitParams(c=0.18721494206461387, loc=2.999999999999993, scale=1.0)
<class 'scipy.stats._continuous_distns.erlang_gen'>
dist.params: FitParams(a=7.0, loc=0.0, scale=1.0)
<class 'scipy.stats._continuous_distns.expon_gen'>
dist.params: FitParams(loc=0.9824033542593966, scale=12.896616510870537)
<class 'scipy.stats._continuous_distns.exponnorm_gen'>
dist.params: FitParams(K=13.884437032206879, loc=0.40588125501077027, scale=1.0)
<class 'scipy.stats._continuous_distns.exponpow_gen'>
dist.params: FitParams(b=0.11268317899479996, loc=0.9999999999999929, scale=1.0)
<class 'scipy.stats._continuous_distns.exponweib_gen'>
dist.params: FitParams(a=5.845550674615029, c=0.3935877619862285, loc=0.0, scale=1.0)
<class 'scipy.stats._continuous_distns.f_gen'>
dist.params: FitParams(dfn=100.0, dfd=1.0327689546890508, loc=0.0, scale=1.0)
<class 'scipy.stats._continuous_distns.fatiguelife_gen'>
dist.params: FitParams(c=4.069354248378215, loc=0.980368667466142, scale=1.0)
<class 'scipy.stats._continuous_distns.fisk_gen'>
dist.params: FitParams(c=0.26541103225166296, loc=0.9999999999999929, scale=1.0)
<class 'scipy.stats._continuous_distns.foldcauchy_gen'>
dist.params: FitParams(c=1.3050494358269304, loc=0.997063760606629, scale=1.0)
<class 'scipy.stats._continuous_distns.foldnorm_gen'>
dist.params: FitParams(c=16.248588997577826, loc=0.1841564728709031, scale=1.0)
<class 'scipy.stats._continuous_distns.gamma_gen'>
dist.params: FitParams(a=7.467977866255755, loc=0.0, scale=1.0)
<class 'scipy.stats._continuous_distns.gausshyper_gen'>
A `bounds` sequence must contain at least 4 elements: tuples specifying the lower and upper bounds of all shape parameters a, b, c, z.
<class 'scipy.stats._continuous_distns.genexpon_gen'>
A `bounds` sequence must contain at least 3 elements: tuples specifying the lower and upper bounds of all shape parameters a, b, c.
<class 'scipy.stats._continuous_distns.genextreme_gen'>
dist.params: FitParams(c=6.9314361652342384, loc=77.855856158908, scale=1.0)
<class 'scipy.stats._continuous_distns.gengamma_gen'>
dist.params: FitParams(a=2.9846075063883366, c=0.4719823745362843, loc=0.0, scale=1.0)
<class 'scipy.stats._continuous_distns.genhalflogistic_gen'>
dist.params: FitParams(c=1.4204984242295668e-05, loc=0.9999792105585777, scale=1.0)
<class 'scipy.stats._continuous_distns.genhyperbolic_gen'>
A `bounds` sequence must contain at least 3 elements: tuples specifying the lower and upper bounds of all shape parameters p, a, b.
<class 'scipy.stats._continuous_distns.geninvgauss_gen'>
dist.params: FitParams(p=0.7326250824902708, b=0.10825962473498887, loc=0.0, scale=1.0)
<class 'scipy.stats._continuous_distns.genlogistic_gen'>
dist.params: FitParams(c=0.015669632408317643, loc=78.08709046070209, scale=1.0)
<class 'scipy.stats._continuous_distns.gennorm_gen'>
dist.params: FitParams(beta=0.43430386511258234, loc=3.0111311603094677, scale=1.0)
<class 'scipy.stats._continuous_distns.genpareto_gen'>
dist.params: FitParams(c=2.104913810470876, loc=0.9995230655480967, scale=1.0)
<class 'scipy.stats._discrete_distns.geom_gen'>
dist.params: FitParams(p=0.07012487462288208, loc=0.0)
<class 'scipy.stats._continuous_distns.gibrat_gen'>
dist.params: FitParams(loc=0.0, scale=6.973937746998405)
<class 'scipy.stats._continuous_distns.gilbrat_gen'>
dist.params: FitParams(loc=0.0, scale=6.973939180347373)
<class 'scipy.stats._continuous_distns.gompertz_gen'>
dist.params: FitParams(c=15.720209916601029, loc=77.9965747638791, scale=1.0)
<class 'scipy.stats._continuous_distns.gumbel_l_gen'>
dist.params: FitParams(loc=24.205785181654992, scale=24.220061697957625)
<class 'scipy.stats._continuous_distns.gumbel_r_gen'>
dist.params: FitParams(loc=7.542006069412473, scale=9.943409316932105)
<class 'scipy.stats._continuous_distns.halfcauchy_gen'>
dist.params: FitParams(loc=0.9727433202267051, scale=5.388389087397464)
<class 'scipy.stats._continuous_distns.halfgennorm_gen'>
dist.params: FitParams(beta=0.40746908681403227, loc=0.9954726275703933, scale=1.0)
<class 'scipy.stats._continuous_distns.halflogistic_gen'>
dist.params: FitParams(loc=0.9979304501861321, scale=10.762279106341595)
<class 'scipy.stats._continuous_distns.halfnorm_gen'>
dist.params: FitParams(loc=0.96286856231238, scale=22.300929700513063)
<class 'scipy.stats._discrete_distns.hypergeom_gen'>
A `bounds` sequence must contain at least 3 elements: tuples specifying the lower and upper bounds of all shape parameters M, n, N.
<class 'scipy.stats._continuous_distns.hypsecant_gen'>
dist.params: FitParams(loc=10.493057507660659, scale=10.097497402999387)
<class 'scipy.stats._continuous_distns.invgamma_gen'>
dist.params: FitParams(a=0.55208287884666, loc=0.6071188228883917, scale=1.0)
<class 'scipy.stats._continuous_distns.invgauss_gen'>
dist.params: FitParams(mu=13.136223502664247, loc=0.7755636129007369, scale=1.0)
<class 'scipy.stats._continuous_distns.invweibull_gen'>
dist.params: FitParams(c=0.539972700072509, loc=0.8993470190502668, scale=1.0)
<class 'scipy.stats._continuous_distns.johnsonsb_gen'>
dist.params: FitParams(a=98.23386190297465, b=76.10083742781411, loc=0.0, scale=1.0)
<class 'scipy.stats._continuous_distns.johnsonsu_gen'>
dist.params: FitParams(a=0.0, b=0.34091240568198466, loc=0.0, scale=1.0)
<class 'scipy.stats._continuous_distns.kappa3_gen'>
dist.params: FitParams(a=0.4568228990471823, loc=0.9995036032479732, scale=1.0)
<class 'scipy.stats._continuous_distns.kappa4_gen'>
dist.params: FitParams(h=48.068040190155, k=68.95385304216077, loc=0.0, scale=1.0)
<class 'scipy.stats._continuous_distns.ksone_gen'>
dist.params: FitParams(n=96.0, loc=1.9527211328019463, scale=1.0)
<class 'scipy.stats._continuous_distns.kstwo_gen'>
The map-like callable must be of the form f(func, iterable), returning a sequence of numbers the same length as 'iterable'
<class 'scipy.stats._continuous_distns.kstwobign_gen'>
dist.params: FitParams(loc=0.0, scale=8.454006956477453)
<class 'scipy.stats._continuous_distns.laplace_gen'>
dist.params: FitParams(loc=4.000000103012205, scale=11.756813156274248)
<class 'scipy.stats._continuous_distns.laplace_asymmetric_gen'>
dist.params: FitParams(kappa=64.18534128712238, loc=78.07818442925826, scale=1.0)
<class 'scipy.stats._continuous_distns.levy_gen'>
dist.params: FitParams(loc=0.5488077934326837, scale=2.2617382577639105)
<class 'scipy.stats._continuous_distns.levy_l_gen'>
dist.params: FitParams(loc=83.87274569802663, scale=50.839483527393625)
<class 'scipy.stats._levy_stable.levy_stable_gen'>
